(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module thread_pool.
  Definition value_THREAD_POOL : Value.t :=
    M.run
      ltac:(M.monadic
        (M.alloc (|
          M.alloc (|
            M.call_closure (|
              M.get_associated_function (|
                Ty.apply
                  (Ty.path "std::sync::lazy_lock::LazyLock")
                  [
                    Ty.path "rayon_core::thread_pool::ThreadPool";
                    Ty.function [] (Ty.path "rayon_core::thread_pool::ThreadPool")
                  ],
                "new",
                []
              |),
              [
                (* ClosureFnPointer(Normal) *)
                M.pointer_coercion
                  (M.closure
                    (fun γ =>
                      ltac:(M.monadic
                        match γ with
                        | [ α0 ] =>
                          M.match_operator (|
                            M.alloc (| α0 |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (M.read (|
                                    let~ thread_name := M.copy (| Value.String "picachv" |) in
                                    M.alloc (|
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            [
                                              Ty.path "rayon_core::thread_pool::ThreadPool";
                                              Ty.path "rayon_core::ThreadPoolBuildError"
                                            ],
                                          "unwrap",
                                          []
                                        |),
                                        [
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "rayon_core::ThreadPoolBuilder")
                                                [ Ty.path "rayon_core::registry::DefaultSpawn" ],
                                              "build",
                                              []
                                            |),
                                            [
                                              M.call_closure (|
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "rayon_core::ThreadPoolBuilder")
                                                    [ Ty.path "rayon_core::registry::DefaultSpawn"
                                                    ],
                                                  "thread_name",
                                                  [
                                                    Ty.function
                                                      [ Ty.tuple [ Ty.path "usize" ] ]
                                                      (Ty.path "alloc::string::String")
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "rayon_core::ThreadPoolBuilder")
                                                        [
                                                          Ty.path
                                                            "rayon_core::registry::DefaultSpawn"
                                                        ],
                                                      "num_threads",
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "rayon_core::ThreadPoolBuilder")
                                                            [
                                                              Ty.path
                                                                "rayon_core::registry::DefaultSpawn"
                                                            ],
                                                          "new",
                                                          []
                                                        |),
                                                        []
                                                      |);
                                                      M.call_closure (|
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "core::num::nonzero::NonZeroUsize",
                                                          "get",
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path "core::result::Result")
                                                                [
                                                                  Ty.path
                                                                    "core::num::nonzero::NonZeroUsize";
                                                                  Ty.path "std::io::error::Error"
                                                                ],
                                                              "unwrap_or",
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                M.get_function (|
                                                                  "std::thread::available_parallelism",
                                                                  []
                                                                |),
                                                                []
                                                              |);
                                                              M.call_closure (|
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path "core::option::Option")
                                                                    [
                                                                      Ty.path
                                                                        "core::num::nonzero::NonZeroUsize"
                                                                    ],
                                                                  "unwrap",
                                                                  []
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "core::num::nonzero::NonZeroUsize",
                                                                      "new",
                                                                      []
                                                                    |),
                                                                    [ Value.Integer 1 ]
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0 ] =>
                                                          M.match_operator (|
                                                            M.alloc (| α0 |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let i := M.copy (| γ |) in
                                                                  M.read (|
                                                                    let~ res :=
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          M.get_function (|
                                                                            "alloc::fmt::format",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "core::fmt::Arguments",
                                                                                "new_v1",
                                                                                []
                                                                              |),
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.alloc (|
                                                                                    Value.Array
                                                                                      [
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            ""
                                                                                        |);
                                                                                        M.read (|
                                                                                          Value.String
                                                                                            "-"
                                                                                        |)
                                                                                      ]
                                                                                  |));
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.alloc (|
                                                                                    Value.Array
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::rt::Argument",
                                                                                            "new_display",
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "str"
                                                                                                ]
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            thread_name
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::rt::Argument",
                                                                                            "new_display",
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize"
                                                                                            ]
                                                                                          |),
                                                                                          [ i ]
                                                                                        |)
                                                                                      ]
                                                                                  |))
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |) in
                                                                    res
                                                                  |)))
                                                            ]
                                                          |)
                                                        | _ => M.impossible (||)
                                                        end))
                                                ]
                                              |)
                                            ]
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)))
                            ]
                          |)
                        | _ => M.impossible (||)
                        end)))
              ]
            |)
          |)
        |))).
End thread_pool.

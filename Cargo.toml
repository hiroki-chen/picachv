[workspace]
resolver = "2"
members = [
  "picachv-api",
  "picachv-core",
  "picachv-error",
  "picachv-monitor",
  "picachv-message",
  "picachv",
  "examples/polars-policy", "picachv-parse", "examples/polars-playground", "examples/arrow-playground",
]

exclude = ["examples/cpp"]

[workspace.dependencies]
picachv-api = { path = "picachv-api", default-features = false }
picachv-core = { path = "picachv-core", default-features = false }
picachv-error = { path = "picachv-error", default-features = false }
picachv-message = { path = "picachv-message", default-features = false }
picachv-monitor = { path = "picachv-monitor", default-features = false }

arrow-ipc = "51.0.0"
arrow-array = "51.0.0"
arrow-schema = { version = "51.0.0", features = ["serde"] }
log = "0.4.21"
num_enum = { version = "0.7.2" }
ordered-float = { version = "4.2.0", features = ["serde"] }
serde = { version = "1.0.198", features = ["derive", "rc"] }
serde_json = "1.0.116"
prost = { version = "0.12" }
uuid = { version = "1.8.0", features = [
  "v4",       # Lets you generate random UUIDs
  "fast-rng", # Use a faster (but still sufficiently random) RNG
] }
